#!/bin/bash -e

source PogoConfig

verbose=--verbose
unset verbose

[[ -n $PogoTop ]] || Fatal "PogoTop must be set"

Options ()
{
    local force
    local clean
    while [[ $# > 0 ]]; do
        if [[ "$1" == "--force" ]]; then
            rm ${verbose} --force $PogoTop/.created
            shift
        elif [[ "$1" == "--clean" ]]; then
            rm ${verbose} --recursive --force $PogoTop
            shift
        else
            Fatal "unknown option '$1'"
        fi
    done

    unset Options
}

Options "$@"

if [[ -e $PogoTop/.created ]]; then
    exit
fi

mkdir ${verbose}  --parents $PogoTop
mkdir ${verbose}  --parents $PogoTop/Data
mkdir ${verbose}  --parents $PogoTop/Data/Compile
mkdir ${verbose}  --parents $PogoTop/Data/Compile/Archives
mkdir ${verbose}  --parents $PogoTop/Data/Compile/Archives/Flat
mkdir ${verbose}  --parents $PogoTop/Data/Compile/Sources
mkdir ${verbose}  --parents $PogoTop/Data/Variable
mkdir ${verbose}  --parents $PogoTop/Data/Variable/Build
mkdir ${verbose}  --parents $PogoTop/Programs
mkdir ${verbose}  --parents $PogoTop/System
mkdir ${verbose}  --parents $PogoTop/System/Index

tree --noreport -d -L 4 $PogoTop

#declare -p | grep -e 'declare -- Pogo' | cut --characters=12-
for pogoDir in $(declare -p | grep -e 'declare -- Pogo' | cut --characters=12- | sed 's/=.*//'); do
    if [[ ! -d ${!pogoDir} ]]; then
        Fatal "no directory found for $pogoDir (${!pogoDir})"
    fi
done

touch $PogoTop/.created
