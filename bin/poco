#!/bin/bash
source "$Pogos/.pogoConfig" Core
Pool_Checker

TODO=(
    #--#609-glibc
    #--#610-adjusting
    #--#628-shadow
    #--#646-kmod
    #--#662-grub
    #--#665-iproute
    #--#666-kbd
    #--#670-sysklogd
    #--#671-sysvinit
    #--#672-eudev
    #--#677-vim
    #linux-headers
    man-pages       #608-man-pages          #!
    zlib            #611-zlib               #!
    file            #612-file               #!
    readline        #613-readline           #!
    m4              #614-m4                 #!
    ed                                      #!
    bc              #615-bc                 #!
    binutils        #616-binutils           #!
    gmp             #617-gmp                #!
    mpfr            #618-mpfr               #!
    mpc             #619-mpc                #!
    gcc             #620-gcc                #todo
    bzip2           #621-bzip2              #!
    pkg-config      #622-pkg-config         #!
    ncurses         #623-ncurses            #!
    attr            #624-attr               #!
    acl             #625-acl                #!
    libcap          #626-libcap             #!
    sed             #627-sed                #!
    psmisc          #629-psmisc             #!
    iana-etc        #630-iana-etc           #!
    bison           #631-bison              #!
    flex            #632-flex               #!
    grep            #633-grep               #!
    bash            #634-bash               #multi
    libtool         #635-libtool            #!
    gdbm            #636-gdbm               #!
    gperf           #637-gperf              #!
    expat           #638-expat              #!
    inetutils       #639-inetutils          #!
    perl            #640-perl               #!
    perl-xml-parser #641-xml-parser         #!
    intltool        #642-intltool           #!
    autoconf        #643-autoconf           #!
    automake        #644-automake           #multi
    xz              #645-xz                 #!
    gettext         #647-gettext            #!
    libelf          #648-libelf             #!
    libffi          #649-libffi             #!
    openssl         #650-openssl            #!
    python3         #651-python             #!
    ninja           #652-ninja              #!
    meson           #653-meson              #!
    procps-ng       #654-procps-ng          #!
    e2fsprogs       #655-e2fsprogs          #!
    coreutils       #656-coreutils          #!
    check           #657-check              #!
    diffutils       #658-diffutils          #!
    gawk            #659-gawk               #!
    findutils       #660-findutils          #!
    groff           #661-groff              #!
    less            #663-less               #!
    gzip            #664-gzip               #!
    libpipeline     #667-libpipeline        #!
    make            #668-make               #!
    patch           #669-patch              #!
    util-linux      #673-utillinux          #multi
    man-db          #674-man-db             #!
    tar             #675-tar                #!
    texinfo         #676-texinfo            #!
    lzo                                     #!
    less                                    #!
    libuv                                   #!
    isl                                     #!
    tree                                    #!
    which                                   #!
    libarchive                              #!
    icu                                     #!
    lzip                                    #!
    nano                                    #!
    python2                                 #!
    strace                                  #!
    curl                                    #!
    cmake                                   #....
    lua                                     #....
)

if [[ "${1:-}" == "--cleanall" ]]; then
    Build_CleanAll
elif [[ "${1:-}" == "--shell" ]]; then
    true
elif [[ "${1:-}" == "--download" ]]; then
    for recipe in "${TODO[@]}"; do
     readline   Build_Download "$recipe"
    done
elif [[ "${1:-}" == "--build-all" ]]; then
    for recipe in "${TODO[@]}"; do
        Build_Download "$recipe"
    done
    for recipe in "${TODO[@]}"; do
        Build_Make "$recipe" build
        Build_Make "$recipe" done
    done
elif [[ "${1:-}" == "--rebuild-all" ]]; then
    Build_CleanAll
    for recipe in "${TODO[@]}"; do
        Build_Download "$recipe"
    done
    for recipe in "${TODO[@]}"; do
        Build_Make "$recipe" build
        Build_Make "$recipe" done
    done
else
    # $1 must be recipe-token
    Build_Make "$1" "${2:-}"
fi
