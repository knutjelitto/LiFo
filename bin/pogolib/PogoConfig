#!/bin/bash -eu (source-only)

[[ -z ${_pogoConfigIncluded:-} ]] || exit
_pogoConfigIncluded=true

if [[ -n ${POGO_CHROOT:-} ]]; then
    InChroot() { return 0; }
else
    InChroot() { return 1; }
fi

PogoVolume=/Pogo

PogoData=/Data
PogoPrograms=/Programs
PogoSystem=/System

PogoCompile=$PogoData/Compile
PogoSources=$PogoCompile/Sources
PogoBuild=$PogoCompile/Build
PogoStore=$PogoCompile/Store
PogoLfs=$PogoCompile/Lfs
PogoTools=$PogoLfs/tools

PogoVariable=$PogoData/Variable
PogoArchives=$PogoVariable/Archives
PogoDownloads=$PogoVariable/Downloads

PogoIndex=$PogoSystem/Index

Fatal ()
{
    local prefix
    case $0 in
        */pogo) ;;
        *) prefix="pogo " ;;
    esac
        
    echo "${prefix}${0##*/}: $1" 1>&2
    exit 127
}

Trace ()
{
    echo "$1" >/dev/console
}

PogoExec ()
{
    [[ -n "$1" ]] || Fatal "no argument given"
    script=/LiFo/bin/pogolib/$1
    [[ -e "$script" ]] || Fatal "unknown function '$1'"
    shift
    $script "$@"
}

Import ()
{
    source /LiFo/bin/pogolib/$1
}

# export Import function for convenience
declare -F -x Import

declare -a PogoVars
PogoVars=$(declare -p | grep -e 'declare -- Pogo' | cut --characters=12- | sed 's/=.*//')

verbose=--verbose

Import PogoFunctions
Import RecipeFunctions
Import BuildFunctions
