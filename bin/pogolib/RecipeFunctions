#!/bin/bash -eu (source-only)

[[ -z ${_recipeFunctionsIncluded:-} ]] || exit
_recipeFunctionsIncluded=true

RecipeRequiredVars=(Title Name Version Supplies)
RecipeOptionalVars=(BuildIn Redirect)
RecipeRequiredFuncs=()
RecipeOptionalFuncs=(Prepare Configure Build Install Trim)
RecipesSource=/LiFo/Recipes
RecipesPath=Core:Optional:LFSboots:LFSTools
declare RecipeFile RecipeCollection

RecipeUnset () { unset "${RecipeRequiredVars[@]}" "${RecipeRequiredFuncs[@]}" "${RecipeOptionalVars[@]}" "${RecipeOptionalFuncs[@]}"; }

RecipeFind ()
{
    # sets global RecipeCollection / RecipeFile
    for RecipeCollection in ${RecipesPath//:/ }; do
        RecipeFile=/LiFo/Recipes/$RecipeCollection/$Token
        if [[ ! -f $RecipeFile ]]; then
            for RecipeFile in /LiFo/Recipes/$RecipeCollection/$Token-*; do
                if [[ -f $RecipeFile ]]; then
                    return
                fi
            done
        fi
        if [[ ! -f $RecipeFile ]]; then
            RecipeFile=/LiFo/Recipes/$RecipeCollection/$Token/Recipe
        fi
        if [[ -f $RecipeFile ]]; then
            return
        fi
    done

    if [[ ! -f RecipeFile ]]; then
        Fatal "nothing found for recipe token '$Token'"
    fi
}

RecipeSource ()
{
    Token=${1:-}

    if [[ -z $Token ]]; then
        Fatal "no recipe token given"
    fi

    RecipeUnset
    RecipeFind
    
    source $RecipeFile

    while [[ -n ${Redirect:-} ]]; do
        echo "Redirecting $Token -> $Redirect"
        Token=$Redirect
        RecipeUnset
        RecipeFind
        source $RecipeFile
    done

    local variable
    for variable in "${RecipeRequiredVars[@]}"; do
        if [[ ! -v ${variable} ]]; then
            Fatal "required variable '$variable' missing in receipe '$Token' at '$RecipeFile'"
        fi
    done
    local function
    for function in "${RecipeRequiredFuncs[@]}"; do
        if [[ ! "$(type -t $function)" == "function" ]]; then
            Fatal "required function '$function' missing in receipe '$Token' at '$RecipeFile'"
        fi
    done
    for function in "${RecipeOptionalFuncs[@]}"; do
        if [[ ! "$(type -t $function)" == "function" ]]; then
            eval "$function () { true; }"
        fi
    done
}
