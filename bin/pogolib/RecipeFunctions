#!/bin/bash -eu (source-only)

[[ -z ${_recipeFunctionsIncluded:-} ]] || exit
_recipeFunctionsIncluded=true

RecipeRequiredVars=(Title Name Version Supplies)
RecipeOptionalVars=(BuildIn Redirect)
RecipeRequiredFuncs=()
RecipeOptionalFuncs=(Prepare Configure Build Install Trim)
RecipesSource=/LiFo/Recipes
RecipesPath=Core:Optional:LFSboots

RecipeUnset () { unset "${RecipeRequiredVars[@]}" "${RecipeRequiredFuncs[@]}" "${RecipeOptionalVars[@]}" "${RecipeOptionalFuncs[@]}"; }

RecipeFind ()
{
    local token=$1
    local recipe=/LiFo/Recipes/$token/Recipe

    for part in ${RecipesPath//:/ }; do
        Trace "looking in '/LiFo/Recipes/$part'"
        recipe=/LiFo/Recipes/$part/$token
        if [[ ! -f $recipe ]]; then
            Trace "not found: $recipe"
            for recipe in /LiFo/Recipes/$part/$token-*; do
                Trace "try: $recipe"
                if [[ -f $recipe ]]; then
                    Trace "found: $recipe"
                    echo $recipe
                    return
                fi
            done
            Trace "not found: $recipe"
            recipe=/LiFo/Recipes/$part/$token-*
        fi
        if [[ ! -f $recipe ]]; then
            Trace "not found: $recipe"
            recipe=/LiFo/Recipes/$part/$token/Recipe
        fi
        if [[ ! -f $recipe ]]; then
            Trace "not found: $recipe"
        else
            Trace "found: $recipe"
            echo "$recipe"
            return
        fi
    done

    if [[ ! -r $recipe ]]; then
        Fatal "nothing found for recipe token '$token'"
    fi

    echo $recipe
}

RecipeSource ()
{
    if [[ -z $1 ]]; then
        Fatal "no recipe token given"
    fi

    Token=$1

    RecipeUnset

    Recipe=$(RecipeFind $Token)
    RecipeStore=$(dirname $Recipe)
    
    source $Recipe

    while [[ -n ${Redirect:-} ]]; do
        echo "Redirecting $Token -> $Redirect"
        Token=$Redirect
        Unset
        Recipe=$(RecipeFind $Token)
        source $Recipe
    done

    local variable
    for variable in "${RecipeRequiredVars[@]}"; do
        if [[ ! -v ${variable} ]]; then
            Fatal "required variable '$variable' missing in receipe '$Token' at '$Recipe'"
        fi
    done
    local function
    for function in "${RecipeRequiredFuncs[@]}"; do
        if [[ ! "$(type -t $function)" == "function" ]]; then
            Fatal "required function '$function' missing in receipe '$Token' at '$Recipe'"
        fi
    done
    for function in "${RecipeOptionalFuncs[@]}"; do
        if [[ ! "$(type -t $function)" == "function" ]]; then
            eval "$function () { true; }"
        fi
    done
}
