#!/bin/bash (source-only)

[[ -z ${_pogoFunctionsIncluded:-} ]] || exit
_pogoFunctionsIncluded=true

Pushd ()
{
    pushd $1 >/dev/null
}

Popd ()
{
    popd >/dev/null
}

MakeDir ()
{
    mkdir $verbose --parents "$@"
}

RemoveDir ()
{
    rm $verbose --force --recursive "$@"
}

RemoveFile ()
{
    local file
    for file in "$@"; do
        [[ -f $file || -h $file ]] || continue
        rm $verbose --force "$file"
    done
}

Rename ()
{
    local source="$1"
    local target="$2"

    mv $verbose --no-target-directory "$source" "$target"
}

LinkFile ()
{
    local link="$1"
    local target="$2"
    ln $verbose --symlink --force --no-target-directory --relative "$target" "$link"
}

Touch ()
{
    local path="$1"

    MakeDir "$(dirname $path)"
    touch "$path"
}

Header ()
{
    echo -ne "\033]0;$1\007" >/dev/console
}

ListContains ()
{
    local match="$1"
    local element
    shift
    for element; do
        [[ "$element" == "$match" ]] && return 0
    done
  
    return 1
}

Fatal ()
{
    local prefix
    case $0 in
        */pogo) prefix='' ;;
        *) prefix="pogo " ;;
    esac
        
    echo "${prefix}${0##*/}:" "$@" 1>&2
    exit 127
}

InfoExit ()
{
    local prefix
    case $0 in
        */pogo) ;;
        *) prefix="pogo " ;;
    esac
        
    echo "${prefix}${0##*/}: $1"

    exit
}

Trace ()
{
    echo "$1" >/dev/console
}

#
# (Re-)Create then Pogo tree
#
EnsurePogoEnvironment ()
{
    local directories=(
        /Data/Compile
        /Data/Compile/Sources
        /Data/Compile/Build
        /Data/Compile/Roots
        #/Data/Compile/Lfs
        #/Data/Compile/Lfs/tools
        /Data/Variable/Archives
        /Data/Variable/Downloads
        /Data/Variable/Store
        /System/Index
        /Programs
    )

    MakeDir "${directories[@]}"

    local pogoDir
    for pogoDir in $(declare -p | grep -e 'declare -- Pogo' | cut --characters=12- | sed 's/=.*//'); do
        if [[ ! -d ${!pogoDir} ]]; then
            [[ "$pogoDir" == "PogoVolume" ]] || Fatal "no directory found for $pogoDir (${!pogoDir})"
        fi
    done
}
