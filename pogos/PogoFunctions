#!/bin/bash (source-only)

[[ -z ${_pogoFunctionsIncluded:-} ]] || exit
_pogoFunctionsIncluded=true

Capitalize ()
{
    local old_IFS=$IFS
    local part
    local captitalized
    IFS='-'
    for part in ${1,,}; do
        captitalized=$captitalized${part^}
    done
    IFS=$old_IFS
    echo $captitalized
}

Pushd ()
{
    pushd $1 >/dev/null
}

Popd ()
{
    popd >/dev/null
}

MakeDir ()
{
    mkdir ${verbose} --parents "$@"
}

Header ()
{
    echo -ne "\033]0;$1\007" >/dev/console
}

ListContains ()
{
    local match="$1"
    local element
    shift
    for element; do
        [[ "$element" == "$match" ]] && return 0
    done
  
    return 1
}

#
# (Re-)Create then Pogo tree
#
EnsurePogoEnvironment ()
{
    local directories=(
        /Data/Compile
        /Data/Compile/Sources
        /Data/Compile/Build
        /Data/Compile/Roots
        #/Data/Compile/Lfs
        #/Data/Compile/Lfs/tools
        /Data/Variable/Archives
        /Data/Variable/Downloads
        /Data/Variable/Store
        /System/Index
        /Programs
    )

    MakeDir "${directories[@]}"

    local pogoDir
    for pogoDir in $(declare -p | grep -e 'declare -- Pogo' | cut --characters=12- | sed 's/=.*//'); do
        if [[ ! -d ${!pogoDir} ]]; then
            [[ "$pogoDir" == "PogoVolume" ]] || Fatal "no directory found for $pogoDir (${!pogoDir})"
        fi
    done
}
